<?php	
	
function kabbalah_api_menu() {

	$items['k_api/rest/v__1/slds'] = array(
		'page callback'    => 'getSlideshowData',
		'access callback'  => TRUE,
		'file'             => 'slideshow.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/bgnr_crs'] = array(
		'page callback'    => 'getBeginnersCoursesData',
		'access callback'  => TRUE,
		'file'             => 'beginnerscourses.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/recently_added_lsns'] = array(
		'page callback'    => 'getRecentlyAddedLessonsData',
		'access callback'  => TRUE,
		'file'             => 'recentlyaddedlessons.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/recently_added_crs'] = array(
		'page callback'    => 'getRecentlyAddedCoursesData',
		'access callback'  => TRUE,
		'file'             => 'recentlyaddedcourses.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/recommended_lsns/%/%'] = array(
		'page callback'    => 'getRecommendedLessosnsData',
		'page arguments' => array(4,5),
		'access callback'  => TRUE,
		'file'             => 'recommendedlessons.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/free_lsns'] = array(
		'page callback'    => 'getFreeLessonsData',
		'access callback'  => TRUE,
		'file'             => 'freelessons.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/crs'] = array(
		'page callback'    => 'getCoursesData',
		'access callback'  => TRUE,
		'file'             => 'courses.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/tchrs'] = array(
		'page callback'    => 'getTeachersData',
		'access callback'  => TRUE,
		'file'             => 'teachers.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);

	$items['k_api/rest/v__1/onl_dmd_evts'] = array(
		'page callback'    => 'getOndemandEventsData',
		'access callback'  => TRUE,
		'file'             => 'ondemandevents.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);
	
	$items['k_api/rest/v__1/live_evnts'] = array(               // Made this a PAGE
		'page callback'      => 'getCoursesByLiveEventsData',
		'access callback'  => TRUE,
		'file'             => 'liveevents.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);
	
	$items['k_api/rest/v__1/lngs'] = array(               // Made this a PAGE
		'page callback'      => 'getCoursesByLanguageData',
		'access callback'  => TRUE,
		'file'             => 'languages.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);
	
	
	// Profile Dashboard API's
	
	$items['k_api/rest/v__1/recently_added_lsns_by_mbshp/%'] = array(               // Made this a PAGE
		'page arguments' => array(4),
		'page callback'      => 'getRecentlyAddedLessonsByMembershipData',
		'access callback'  => TRUE,
		'file'             => 'dashboard_recently_added_lessons_by_membership.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);
	
	$items['k_api/rest/v__1/recently_added_crs_by_mbshp/%'] = array(              
		'page callback'      => 'getRecentlyAddedCoursesByMembershipData',
		'page arguments' => array(4),
		'access callback' => TRUE,
		'file'             => 'dashboard_recently_added_courses_by_membership.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);
	
	$items['k_api/rest/v__1/dshbrd_live_evnts'] = array(              
		'page callback'      => 'getLiveEventsData',
		'access callback' => TRUE,
		'file'             => 'dashboard_live_events.inc',
		'file path' => drupal_get_path('module', 'kabbalah_api') . '/includes',
	);
		
	// End of Profile Dashboard API's
	

	return $items;
} 
	
function runPageQueryForApi( $vid , $vname , $type_of_course_tid ) {
	
		$sql =  "SELECT n.nid,n.title,il.field_image_cdn_link_value,n.nid,b.body_value,n.changed,ti.tid,td.name ".
					"FROM {node n} ".
					"LEFT JOIN {node_revision nr} ON ( n.nid = nr.nid and n.vid = nr.vid ) ".
					"LEFT JOIN {field_data_field_image_cdn_link il} ON ( nr.nid = il.entity_id AND nr.vid = il.revision_id ) ".
					"LEFT JOIN {field_revision_body b} ON ( nr.nid = b.entity_id AND nr.vid = b.revision_id ) ".
					"LEFT JOIN {field_revision_field_parent_course pc} ON ( nr.nid = pc.entity_id AND nr.vid = pc.revision_id ) ".
					"LEFT JOIN {field_data_field_type_of_course toc} ON ( nr.nid = toc.entity_id AND nr.vid = toc.revision_id ) ".
					"LEFT JOIN {field_data_field_course_language cl} ON ( nr.nid = cl.entity_id AND nr.vid = cl.revision_id ) ".
					"LEFT JOIN {taxonomy_index ti} ON( nr.nid = ti.nid ) ".
					"LEFT JOIN {taxonomy_term_data td} ON( ti.tid = td.tid) ".
					"WHERE n.status =1 ".
					"AND td.vid = ".$vid." ".
					"AND td.name = '".$vname."' ".
					"AND ( n.type in ('course','parent_course' ) AND pc.field_parent_course_nid IS NULL ";
					
		if( $vid != 16 ) $sql .= "AND cl.field_course_language_tid IS NULL ";		
		
		//if( $vid != 7 )  $sql .= "AND toc.field_type_of_course_tid = ".$type_of_course_tid.") ";
		
		if( $vid != 7 ) $sql .= "AND toc.field_type_of_course_tid = ".$type_of_course_tid."";
		$sql .=	") ORDER BY n.changed DESC LIMIT 10";
		
		$result = db_query( $sql );
		return $result;
		
	}
		
function processPageQueryResultsForApi( $result , $vid ) {
	
		$vname_articles = array();
		foreach( $result as $record )	{
	
			$title = $record->title;
			$title = preg_replace("/&#?[a-z0-9]+;/i","",$title); // removes $nbsp
			if( $vid != 16 ) $teaser  = getCleanBody( $record->body_value , 100 );
			$path = url(drupal_get_path_alias('node/' . $record->nid), array('absolute' => TRUE));	
			$node = node_load($record->nid , NULL, TRUE);
			$image_link = $record->field_image_cdn_link_value;
			if( $node->type == "course" ) {
			
				if( sizeof($node->field_lesson_group) > 0 )	{
					$membership = taxonomy_term_load($node->field_lesson_group['und'][0]['tid']);
					$membership = $membership->name;
				}
			}

			$vocab_terms4 = _taxonomy_node_get_terms_by_vocabulary($node, $vid );
			foreach( $vocab_terms4 as $t )	{	$p_topic_description = $t->description; }
			
			$vocab_terms3 = _taxonomy_node_get_terms_by_vocabulary($node, 7 );
			foreach( $vocab_terms3 as $t )	{	$author_name = $t->name; }
			
			if( $node->type == "course" ) {
			
				if( sizeof($node->field_this_course_contains) > 0 )  {
				
					if( $node->field_this_course_contains['und'][0]['value'] == 1 ) $media_type = 'audioImg';
					else if( $node->field_this_course_contains['und'][0]['value'] == 0 ) $media_type = 'vidImg';
					else $media_type = 'bothAdVdImg';
				} else {

					$media_type = 'bothAdVdImg';
				}
			}
			
			$content_membership = "";
		    if( kabbalah_content_access_get_article_membership($membership) == FALSE ) $content_membership = $membership;
			
			
			$vname_articles[] = array(  'title' => $title , 
										'image_link' => $image_link ,
										'path' => $path , 
										'teaser' => $teaser , 
										'author' => $author_name , 
										'date_created' => date( 'F jS, Y',$record->changed ) ,
										'membership' => $content_membership,
										'media_type' => $media_type
									  );							  
		}
		return array( "articles" => $vname_articles , "term_description" => $p_topic_description );
	}

function getTermNamesForApi( $vid )	{
	
		$topics =  taxonomy_get_tree( $vid ); 
		$vnames = array();
		foreach( $topics as $t ) {
			$vnames[$t->tid] = $t->name;
		}
		return $vnames;
	}
	
function getCleanBody( $body , $limit = 100 ) { // $limit = 0 means no limit
	
		$body = preg_replace('#<script(.*?)>(.*?)</script>#is', '', $body);
		$body = preg_replace('#<object(.*?)>(.*?)</object>#is', '', $body);
		$teaser = preg_replace('#<img(.*?)>#is', '', $body);
		$teaser = preg_replace("/&#?[a-z0-9]+;/i","",$teaser); // removeds $nbsp
		$teaser = stripslashes($teaser);
		$teaser = strip_tags($teaser);

		if( $limit != 0 )$teaser = substr( $teaser , 0 , $limit );
		if( $teaser != false ) return $teaser;
		else return "";
	
	}	
